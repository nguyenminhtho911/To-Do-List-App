{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\todolist-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const inputRef = useRef();\n  const [job, setJob] = useState(\"\");\n  const [jobs, setJobs] = useState(() => {\n    const storageJobs = JSON.parse(localStorage.getItem(\"jobs\")); // Lấy json parse ra mảng\n\n    return storageJobs !== null && storageJobs !== void 0 ? storageJobs : []; // null or undefine get []\n  });\n\n  const handleSubmit = () => {\n    //(2) tạo hàm submit lấy job thêm vào danh sách jobs\n    setJobs(prev => {\n      const newJobs = [...prev, job]; //Save to localstorage (3)\n\n      const jsonJobs = JSON.stringify(newJobs);\n      localStorage.setItem(\"jobs\", jsonJobs);\n      return newJobs;\n    });\n    setJob(\"\"); // Sau khi set ds setJobs thì sửa setJob thành chuỗi rỗng\n\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 32\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: job,\n      onChange: e => setJob(e.target.value) // (1) two-way binding\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: job\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U562O3XrgL59HuJngK2A7iE5U8Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","App","inputRef","job","setJob","jobs","setJobs","storageJobs","JSON","parse","localStorage","getItem","handleSubmit","prev","newJobs","jsonJobs","stringify","setItem","current","focus","padding","e","target","value","map","index"],"sources":["C:/Users/lenovo/Desktop/todolist-app/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nfunction App() {\n  const inputRef = useRef();\n\n  const [job, setJob] = useState(\"\");\n  const [jobs, setJobs] = useState(() => {\n    const storageJobs = JSON.parse(localStorage.getItem(\"jobs\")); // Lấy json parse ra mảng\n    return storageJobs ?? []; // null or undefine get []\n  });\n\n  const handleSubmit = () => {\n    //(2) tạo hàm submit lấy job thêm vào danh sách jobs\n    setJobs((prev) => {\n      const newJobs = [...prev, job];\n\n      //Save to localstorage (3)\n      const jsonJobs = JSON.stringify(newJobs);\n      localStorage.setItem(\"jobs\", jsonJobs);\n\n      return newJobs;\n    });\n\n    setJob(\"\"); // Sau khi set ds setJobs thì sửa setJob thành chuỗi rỗng\n\n\n    inputRef.current.focus();\n  };\n\n  return (\n    <div style={{ padding: 32 }}>\n      <input\n        ref={inputRef}\n        value={job}\n        onChange={(e) => setJob(e.target.value)} // (1) two-way binding\n      />\n      <button onClick={handleSubmit}>Add</button>\n\n      <ul>\n        {jobs.map((job, index) => (\n          <li key={index}>{job}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGF,MAAM,EAAvB;EAEA,MAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAM;IACrC,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB,CADqC,CACyB;;IAC9D,OAAOJ,WAAP,aAAOA,WAAP,cAAOA,WAAP,GAAsB,EAAtB,CAFqC,CAEX;EAC3B,CAH+B,CAAhC;;EAKA,MAAMK,YAAY,GAAG,MAAM;IACzB;IACAN,OAAO,CAAEO,IAAD,IAAU;MAChB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAJ,EAAUV,GAAV,CAAhB,CADgB,CAGhB;;MACA,MAAMY,QAAQ,GAAGP,IAAI,CAACQ,SAAL,CAAeF,OAAf,CAAjB;MACAJ,YAAY,CAACO,OAAb,CAAqB,MAArB,EAA6BF,QAA7B;MAEA,OAAOD,OAAP;IACD,CARM,CAAP;IAUAV,MAAM,CAAC,EAAD,CAAN,CAZyB,CAYb;;IAGZF,QAAQ,CAACgB,OAAT,CAAiBC,KAAjB;EACD,CAhBD;;EAkBA,oBACE;IAAK,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAX,CAAZ;IAAA,wBACE;MACE,GAAG,EAAElB,QADP;MAEE,KAAK,EAAEC,GAFT;MAGE,QAAQ,EAAGkB,CAAD,IAAOjB,MAAM,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB,CAG2C;;IAH3C;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAQ,OAAO,EAAEX,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAQE;MAAA,UACGP,IAAI,CAACmB,GAAL,CAAS,CAACrB,GAAD,EAAMsB,KAAN,kBACR;QAAA,UAAiBtB;MAAjB,GAASsB,KAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA3CQxB,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}